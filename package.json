{
  "name": "nexus-graphql-boilerplate",
  "version": "0.1.0",
  "private": true,
  "dependencies": {
    "@apollo/client": "^3.1.4",
    "nexus": "^0.26.1",
    "nexus-plugin-prisma": "^0.17.0",
    "react": "^16.13.1",
    "react-dom": "^16.13.1",
    "react-scripts": "^3.4.3"
  },
  "scripts": {
    "dev": "FORCE_COLOR=true run-p -l dev:* | cat",
    "dev:client": "react-app-rewired start",
    "dev:server": "ts-node-dev -P tsconfig-graphql-server.json --no-notify --respawn --transpile-only src/graphql-server/server.ts",
    "dev:graphql-types": "yarn generate:graphql-types --watch < /dev/null",
    "build": "yarn generate && run-p -l build:*",
    "build:client": "react-app-rewired build",
    "build:server": "yarn tsc -P ./tsconfig-graphql-server.json --outDir build-server",
    "generate": "run-p -l generate:*",
    "generate:prisma": "prisma generate",
    "generate:nexus": "ts-node -P tsconfig-graphql-server.json --transpile-only src/graphql-server/nexus-schema-gen.ts",
    "generate:graphql-types": "apollo client:codegen --localSchemaFile=./schema.graphql --target=typescript --includes='./src/**/*.{ts,tsx,graphql}'",
    "prisma-playground": "ts-node -P tsconfig-graphql-server.json -O '{ \"isolatedModules\": false }'",
    "lint": "eslint './src/**/*.{ts,tsx}' --format codeframe --color"
  },
  "devDependencies": {
    "@pmmmwh/react-refresh-webpack-plugin": "^0.4.1",
    "@types/react-dom": "^16.9.8",
    "apollo": "^2.30.2",
    "eslint-config-prettier": "^6.11.0",
    "eslint-plugin-prettier": "^3.1.4",
    "eslint-plugin-react-hooks": "^4.1.0",
    "npm-run-all": "^4.1.5",
    "prettier": "^2.1.1",
    "react-app-rewired": "^2.1.6",
    "react-refresh": "^0.8.3",
    "ts-node-dev": "^1.0.0-pre.61",
    "typescript": "^4.0.2"
  },
  "resolutions": {
    "graphql": "^15.3.0"
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  }
}
